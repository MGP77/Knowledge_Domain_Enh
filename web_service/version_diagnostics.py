#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å –≤–µ—Ä—Å–∏—è–º–∏ –ø–∞–∫–µ—Ç–æ–≤ –≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π —Å—Ä–µ–¥–µ
"""

import sys
import importlib
import pkg_resources
from datetime import datetime

def check_package_versions():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–µ—Ä—Å–∏–∏ –∫–ª—é—á–µ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤"""
    
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –í–ï–†–°–ò–ô –ü–ê–ö–ï–¢–û–í")
    print("=" * 50)
    print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now()}")
    print(f"üêç Python: {sys.version}")
    print()
    
    # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
    critical_packages = [
        'fastapi',
        'uvicorn', 
        'jinja2',
        'pydantic',
        'requests'
    ]
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
    additional_packages = [
        'python-multipart',
        'chromadb',
        'pypdf2',
        'python-docx',
        'beautifulsoup4',
        'python-magic',
        'typing-extensions',
        'aiofiles',
        'python-dotenv',
        'langchain-gigachat'
    ]
    
    all_packages = critical_packages + additional_packages
    
    print("üì¶ –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–´–ï –ü–ê–ö–ï–¢–´:")
    print("-" * 30)
    
    critical_ok = True
    for package in critical_packages:
        try:
            version = pkg_resources.get_distribution(package).version
            print(f"‚úÖ {package:20} v{version}")
        except pkg_resources.DistributionNotFound:
            print(f"‚ùå {package:20} –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù")
            critical_ok = False
        except Exception as e:
            print(f"‚ö†Ô∏è  {package:20} –û–®–ò–ë–ö–ê: {e}")
            critical_ok = False
    
    print()
    print("üìö –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ü–ê–ö–ï–¢–´:")
    print("-" * 30)
    
    additional_ok = True
    for package in additional_packages:
        try:
            version = pkg_resources.get_distribution(package).version
            print(f"‚úÖ {package:20} v{version}")
        except pkg_resources.DistributionNotFound:
            print(f"‚ùå {package:20} –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù")
            additional_ok = False
        except Exception as e:
            print(f"‚ö†Ô∏è  {package:20} –û–®–ò–ë–ö–ê: {e}")
    
    print()
    print("üîÑ –¢–ï–°–¢ –ò–ú–ü–û–†–¢–û–í:")
    print("-" * 30)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã
    import_tests = [
        ('fastapi', 'FastAPI'),
        ('uvicorn', 'uvicorn'),
        ('jinja2', 'Jinja2'),
        ('pydantic', 'Pydantic'),
        ('requests', 'HTTP –∫–ª–∏–µ–Ω—Ç'),
    ]
    
    import_ok = True
    for module, description in import_tests:
        try:
            importlib.import_module(module)
            print(f"‚úÖ {module:20} {description}")
        except ImportError as e:
            print(f"‚ùå {module:20} –û–®–ò–ë–ö–ê –ò–ú–ü–û–†–¢–ê: {e}")
            import_ok = False
        except Exception as e:
            print(f"‚ö†Ô∏è  {module:20} –û–®–ò–ë–ö–ê: {e}")
            import_ok = False
    
    print()
    print("üéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:")
    print("=" * 50)
    
    if critical_ok and import_ok:
        print("üéâ –í–°–ï –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–´–ï –ü–ê–ö–ï–¢–´ –í –ü–û–†–Ø–î–ö–ï!")
        print("   –ü—Ä–æ–±–ª–µ–º–∞ —Å –±–µ–ª–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π –ù–ï —Å–≤—è–∑–∞–Ω–∞ —Å –≤–µ—Ä—Å–∏—è–º–∏ –ø–∞–∫–µ—Ç–æ–≤.")
        print()
        print("üîç –í–æ–∑–º–æ–∂–Ω—ã–µ –¥—Ä—É–≥–∏–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   - CORS –ø–æ–ª–∏—Ç–∏–∫–∏ (—É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ)")
        print("   - Content Security Policy (—É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ)")
        print("   - –ü—Ä–æ–±–ª–µ–º—ã —Å —à–∞–±–ª–æ–Ω–∞–º–∏ –∏–ª–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ —Ñ–∞–π–ª–∞–º–∏")
        print("   - –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π firewall")
        
    elif not critical_ok:
        print("üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–ê–ö–ï–¢–´ –û–¢–°–£–¢–°–¢–í–£–Æ–¢!")
        print("   –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
        print("   pip install -r requirements-corporate-flexible.txt")
        
    elif not import_ok:
        print("‚ö†Ô∏è  –ü–†–û–ë–õ–ï–ú–´ –° –ò–ú–ü–û–†–¢–ê–ú–ò!")
        print("   –í–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤–µ—Ä—Å–∏–π.")
        print("   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è:")
        print("   1. pip uninstall fastapi uvicorn jinja2 pydantic")
        print("   2. pip install -r requirements-corporate-flexible.txt")
    
    if not additional_ok:
        print()
        print("üìö –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        print("   –≠—Ç–æ –º–æ–∂–µ—Ç –≤–ª–∏—è—Ç—å –Ω–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å, –Ω–æ –Ω–µ –Ω–∞ –±–µ–ª—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É")

def check_fastapi_compatibility():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å FastAPI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"""
    
    print()
    print("üöÄ –ü–†–û–í–ï–†–ö–ê –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò FASTAPI:")
    print("=" * 50)
    
    try:
        import fastapi
        from fastapi import FastAPI
        from fastapi.middleware.cors import CORSMiddleware
        from fastapi.responses import HTMLResponse
        from fastapi.templating import Jinja2Templates
        
        print(f"‚úÖ FastAPI v{fastapi.__version__}")
        print("‚úÖ CORSMiddleware –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        print("‚úÖ HTMLResponse –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        print("‚úÖ Jinja2Templates –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        app = FastAPI(title="Test App")
        app.add_middleware(CORSMiddleware, allow_origins=["*"])
        
        print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ")
        print("‚úÖ CORS middleware –¥–æ–±–∞–≤–ª–µ–Ω")
        
        return True
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ FastAPI: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
        return False

def version_compatibility_recommendations():
    """–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤–µ—Ä—Å–∏—è–º –¥–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π —Å—Ä–µ–¥—ã"""
    
    print()
    print("üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –í–ï–†–°–ò–Ø–ú:")
    print("=" * 50)
    
    recommendations = {
        "fastapi": ">=0.100.0 (—Å—Ç–∞–±–∏–ª—å–Ω–∞—è –≤–µ—Ç–∫–∞)",
        "uvicorn": ">=0.20.0 (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –∫–æ—Ä–ø. —Å–µ—Ç—è–º–∏)",
        "jinja2": ">=3.0.0 (–ø–æ–¥–¥–µ—Ä–∂–∫–∞ async)",
        "pydantic": ">=2.0.0 (–Ω–æ–≤—ã–π API)",
        "requests": ">=2.28.0 (–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–æ—Ä–ø. –ø—Ä–æ–∫—Å–∏)"
    }
    
    for package, recommendation in recommendations.items():
        print(f"üì¶ {package:15} ‚Üí {recommendation}")
    
    print()
    print("‚ö†Ô∏è  –í–ê–ñ–ù–û –¥–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π —Å—Ä–µ–¥—ã:")
    print("   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ >=–≤–µ—Ä—Å–∏–∏ –≤–º–µ—Å—Ç–æ == –¥–ª—è –≥–∏–±–∫–æ—Å—Ç–∏")
    print("   - –°—Ç–∞—Ä—ã–µ –≤–µ—Ä—Å–∏–∏ –º–æ–≥—É—Ç –∏–º–µ—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å CORS")
    print("   - –ù–æ–≤—ã–µ –≤–µ—Ä—Å–∏–∏ –ª—É—á—à–µ —Ä–∞–±–æ—Ç–∞—é—Ç —Å –∫–æ—Ä–ø. –ø—Ä–æ–∫—Å–∏")

if __name__ == "__main__":
    try:
        check_package_versions()
        fastapi_ok = check_fastapi_compatibility()
        version_compatibility_recommendations()
        
        print()
        print("üéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:")
        print("=" * 50)
        
        if fastapi_ok:
            print("‚úÖ FastAPI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            print("   –ü—Ä–æ–±–ª–µ–º–∞ —Å –±–µ–ª–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –ù–ï –≤ –≤–µ—Ä—Å–∏—è—Ö –ø–∞–∫–µ—Ç–æ–≤")
        else:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å FastAPI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏")
            print("   –í–û–ó–ú–û–ñ–ù–ê–Ø –ü–†–ò–ß–ò–ù–ê –±–µ–ª–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã!")
            print()
            print("üîß –†–ï–®–ï–ù–ò–ï:")
            print("   pip install -r requirements-corporate-flexible.txt")
            
    except KeyboardInterrupt:
        print("\n\n‚ùå –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(1)
    except Exception as e:
        print(f"\n\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)
