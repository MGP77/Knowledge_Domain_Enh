#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º –≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π —Å—Ä–µ–¥–µ
"""

import requests
import sys
import json
from datetime import datetime

def test_server_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤—Å–µ—Ö –æ—Å–Ω–æ–≤–Ω—ã—Ö endpoint'–æ–≤"""
    base_url = "http://localhost:8005"
    
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π —Å—Ä–µ–¥–µ")
    print("=" * 50)
    print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now()}")
    print(f"üåê –ë–∞–∑–æ–≤—ã–π URL: {base_url}")
    print()
    
    # –°–ø–∏—Å–æ–∫ endpoint'–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    endpoints = [
        ("/health", "–ü—Ä–æ—Å—Ç–æ–π health check"),
        ("/api/health", "–î–µ—Ç–∞–ª—å–Ω—ã–π health check"), 
        ("/", "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"),
        ("/admin", "–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å"),
        ("/docs", "Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"),
    ]
    
    results = []
    
    for endpoint, description in endpoints:
        url = f"{base_url}{endpoint}"
        print(f"üîó –¢–µ—Å—Ç–∏—Ä—É–µ–º: {description}")
        print(f"   URL: {url}")
        
        try:
            response = requests.get(url, timeout=10)
            status = response.status_code
            content_type = response.headers.get('content-type', 'unknown')
            content_length = len(response.content)
            
            if status == 200:
                print(f"   ‚úÖ –°—Ç–∞—Ç—É—Å: {status}")
                print(f"   üìã Content-Type: {content_type}")
                print(f"   üìè –†–∞–∑–º–µ—Ä: {content_length} –±–∞–π—Ç")
                
                # –î–ª—è JSON endpoint'–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                if 'json' in content_type and endpoint in ['/health', '/api/health']:
                    try:
                        data = response.json()
                        print(f"   üìä –î–∞–Ω–Ω—ã–µ: {json.dumps(data, indent=2)}")
                    except:
                        pass
                        
                # –î–ª—è HTML endpoint'–æ–≤ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                elif 'html' in content_type:
                    if content_length < 100:
                        print(f"   ‚ö†Ô∏è  –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –º–∞–ª–µ–Ω—å–∫–∏–π —Ä–∞–∑–º–µ—Ä HTML!")
                        print(f"   üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {response.text[:200]}...")
                
                results.append((endpoint, True, status, f"{content_length} –±–∞–π—Ç"))
            else:
                print(f"   ‚ùå –°—Ç–∞—Ç—É—Å: {status}")
                results.append((endpoint, False, status, f"HTTP {status}"))
                
        except requests.exceptions.ConnectionError:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É")
            results.append((endpoint, False, "CONN", "Connection refused"))
        except requests.exceptions.Timeout:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
            results.append((endpoint, False, "TIMEOUT", "Request timeout"))
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {str(e)}")
            results.append((endpoint, False, "ERROR", str(e)))
        
        print()
    
    # –°–≤–æ–¥–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print("üìä –°–í–û–î–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í")
    print("=" * 50)
    successful = sum(1 for _, success, _, _ in results if success)
    total = len(results)
    
    for endpoint, success, status, detail in results:
        status_icon = "‚úÖ" if success else "‚ùå"
        print(f"{status_icon} {endpoint:15} | {status:8} | {detail}")
    
    print()
    print(f"üéØ –£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: {successful}/{total}")
    
    if successful == total:
        print("üéâ –í—Å–µ endpoint'—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    elif successful == 0:
        print("üí• –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("   1. –ó–∞–ø—É—â–µ–Ω –ª–∏ —Å–µ—Ä–≤–µ—Ä (python main.py)")
        print("   2. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–∏ –ø–æ—Ä—Ç (8005)")
        print("   3. –ù–µ—Ç –ª–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ firewall")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ endpoint'—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
        print("   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   - –ü—Ä–æ–±–ª–µ–º—ã —Å —à–∞–±–ª–æ–Ω–∞–º–∏ (–¥–ª—è HTML —Å—Ç—Ä–∞–Ω–∏—Ü)")
        print("   - CORS –ø–æ–ª–∏—Ç–∏–∫–∏ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π —Å—Ä–µ–¥—ã")
        print("   - –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤")

def test_curl_commands():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç curl –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("\nüõ†Ô∏è  –ö–û–ú–ê–ù–î–´ –î–õ–Ø –†–£–ß–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 50)
    print("–í—ã–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–∏ –∫–æ–º–∞–Ω–¥—ã –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π –º–∞—à–∏–Ω—ã:")
    print()
    
    commands = [
        "curl -v http://localhost:8005/health",
        "curl -v http://localhost:8005/api/health", 
        "curl -v http://localhost:8005/",
        "curl -I http://localhost:8005/",  # –¢–æ–ª—å–∫–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏
    ]
    
    for cmd in commands:
        print(f"   {cmd}")
    
    print()
    print("üìã –ß—Ç–æ —Å–º–æ—Ç—Ä–µ—Ç—å –≤ –≤—ã–≤–æ–¥–µ curl:")
    print("   - HTTP/1.1 200 OK - —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç")
    print("   - Content-Type: text/html - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞")
    print("   - Content-Length > 0 - –µ—Å—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ")
    print("   - –ù–µ—Ç –æ—à–∏–±–æ–∫ 'Connection refused'")

if __name__ == "__main__":
    try:
        test_server_endpoints()
        test_curl_commands()
    except KeyboardInterrupt:
        print("\n\n‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(1)
    except Exception as e:
        print(f"\n\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)
