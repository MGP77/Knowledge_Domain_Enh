#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–µ–π GigaChat

Copyright (c) 2025. All rights reserved.
Author: M.P.
"""

from config import config
from app.services.gigachat_service import GigaChatService
import json

def demo_models():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –º–æ–¥–µ–ª—è–º–∏"""
    print("ü§ñ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–µ–π GigaChat")
    print("=" * 60)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
    service = GigaChatService()
    
    print(f"üìä –°—Ç–∞—Ç—É—Å GigaChat: {'‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' if service.check_availability() else '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}")
    print()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –º–æ–¥–µ–ª–µ–π
    print("‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π:")
    print(f"   –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: {config.GIGACHAT_MODELS['–ø–æ_—É–º–æ–ª—á–∞–Ω–∏—é']}")
    print(f"   –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏:")
    for model in config.GIGACHAT_MODELS['–¥–æ—Å—Ç—É–ø–Ω—ã–µ']:
        is_current = model == config.DEFAULT_GIGACHAT_MODEL
        print(f"   {'‚úÖ' if is_current else '  '} {model}")
    print()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ–ª—è—Ö
    print("üìã –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª—è—Ö:")
    if service.check_availability():
        models = service.get_available_models()
        for model in models:
            status = "üü¢ –ê–ö–¢–ò–í–ù–ê" if model['name'] == service.get_current_model() else "‚ö™ –î–æ—Å—Ç—É–ø–Ω–∞"
            default_badge = " [–ü–û –£–ú–û–õ–ß–ê–ù–ò–Æ]" if model['is_default'] else ""
            print(f"   {status} {model['display_name']}{default_badge}")
            print(f"      {model['description']}")
            print()
    else:
        print("   ‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - —Ñ—É–Ω–∫—Ü–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞")
        print("   üìù –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫:")
        for model in config.GIGACHAT_MODELS['–¥–æ—Å—Ç—É–ø–Ω—ã–µ']:
            display_name = service._get_model_display_name(model)
            description = service._get_model_description(model)
            is_default = model == config.GIGACHAT_MODELS['–ø–æ_—É–º–æ–ª—á–∞–Ω–∏—é']
            is_current = model == config.DEFAULT_GIGACHAT_MODEL
            
            status = "üü¢ –ê–ö–¢–ò–í–ù–ê" if is_current else "‚ö™ –î–æ—Å—Ç—É–ø–Ω–∞"
            default_badge = " [–ü–û –£–ú–û–õ–ß–ê–ù–ò–Æ]" if is_default else ""
            print(f"   {status} {display_name}{default_badge}")
            print(f"      {description}")
            print()
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è API –æ—Ç–≤–µ—Ç–∞
    print("üîå –ü—Ä–∏–º–µ—Ä API –æ—Ç–≤–µ—Ç–∞ /api/admin/models:")
    api_response = {
        "models": [
            {
                "name": model,
                "display_name": service._get_model_display_name(model),
                "description": service._get_model_description(model),
                "is_default": model == config.GIGACHAT_MODELS['–ø–æ_—É–º–æ–ª—á–∞–Ω–∏—é']
            }
            for model in config.GIGACHAT_MODELS['–¥–æ—Å—Ç—É–ø–Ω—ã–µ']
        ],
        "current_model": config.DEFAULT_GIGACHAT_MODEL,
        "available": service.check_availability()
    }
    print(json.dumps(api_response, indent=2, ensure_ascii=False))
    print()
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–¥–µ–ª–∏
    print("üîß –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–¥–µ–ª–∏:")
    print(f"   –¢–µ–∫—É—â–∞—è –º–æ–¥–µ–ª—å: {config.DEFAULT_GIGACHAT_MODEL}")
    
    # –ü—Ä–æ–±—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥—Ä—É–≥—É—é –º–æ–¥–µ–ª—å
    test_model = "GigaChat-2-Max"
    print(f"   –ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: {test_model}")
    
    if service.check_availability():
        result = service.set_model(test_model)
        if result:
            print(f"   ‚úÖ –ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {service.get_current_model()}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–¥–µ–ª–∏")
    else:
        # –°–∏–º—É–ª–∏—Ä—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        if test_model in config.GIGACHAT_MODELS['–¥–æ—Å—Ç—É–ø–Ω—ã–µ']:
            print(f"   ‚úÖ –ú–æ–¥–µ–ª—å {test_model} –±—ã–ª–∞ –±—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ (—Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)")
        else:
            print(f"   ‚ùå –ú–æ–¥–µ–ª—å {test_model} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    print()
    
    print("üéØ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≥–æ—Ç–æ–≤–∞!")
    print("üí° –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:")
    print("   1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å: http://localhost:8005/admin")
    print("   2. –û—Ç–∫—Ä–æ–π—Ç–µ –≤–∫–ª–∞–¥–∫—É 'ü§ñ –ú–æ–¥–µ–ª–∏'")
    print("   3. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –º–æ–¥–µ–ª—å –∏–∑ —Å–ø–∏—Å–∫–∞")
    print("   4. –ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ GigaChat –º–æ–¥–µ–ª—å –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞")

if __name__ == "__main__":
    demo_models()
